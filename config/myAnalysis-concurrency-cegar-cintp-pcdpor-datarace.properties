# #########################################################################
# My configuration for concurrent program verification.
# This configuration uses CEGAR & C-Intp & PC-DPOR.
# #########################################################################


# include includes/predicateAnalysis-PredAbsRefiner.properties
# include predicateAnalysis-slicing.properties
# include predicateAnalysis-SlicingAbstractionsRefiner-SBE.properties

cpa 				= cpa.arg.ARGCPA
ARGCPA.cpa 			= cpa.composite.CompositeCPA
CompositeCPA.cpas 	= cpa.threading.ThreadingCPA, cpa.cintp.CIntpCPA, cpa.predicate.PredicateCPA, cpa.datarace.DataRaceCPA, cpa.locations.LocationsCPA, cpa.pointer2.PointerCPA, cpa.functionpointer.FunctionPointerCPA, cpa.por.pcdpor.PCDPORCPA
# CompositeCPA.cpas 	= cpa.threading.ThreadingCPA, cpa.cintp.CIntpCPA, cpa.predicate.PredicateCPA, cpa.locations.LocationsCPA, cpa.pointer2.PointerCPA, cpa.functionpointer.FunctionPointerCPA, cpa.por.pcdpor.PCDPORCPA

cegar.refiner = cpa.datarace.DataRaceAbstractionsRefiner

analysis.algorithm.CEGAR 				= true
analysis.traversal.order 				= dfs
analysis.traversal.useReversePostorder 	= false
analysis.traversal.useCallstack 		= true
analysis.traversal.useNumberOfThreads  	= true

cpa.threading.maxNumberOfThreads 			= 5
cpa.threading.useClonedFunctions 			= true
cpa.threading.useLocalAccessLocks 			= false
cpa.threading.allowMultipleLHS 				= true
cpa.callstack.unsupportedFunctions				= pthread_key_create, pthread_getspecific, pthread_setspecific, pthread_cond_wait, strcpy
cfa.useCFACloningForMultiThreadedPrograms		= true
# cpa.por.pcdpor.regardThreadCreationAsNormalEdge = false


utils.edgeinfo.buildDepGraph  = true
depgraph.cond.buildClonedFunc = true
depgraph.cond.useCondDep = false
depgraph.cond.removeIsolatedNodes = false
depgraph.cond.export = false
depgraph.cond.useSolverToCompute = true
depgraph.cond.exportDot = CondDependenceGraph.dot
cpa.por.pcdpor.depComputationStateType = PREDICATE

cpa.locations.forConcurrent 		= true
cpa.locations.allowMultipleLHS 		= true
cpa.locations.maxNumberOfThreads	= 5

cpa.locations.useIncClonedFunc			= false
cpa.threading.useIncClonedFunc 			= false
depgraph.cond.buildForNoneCloneThread	= true
cfa.cfaCloner.numberOfCopies			= 5


cpa.composite.aggregateBasicBlocks  			= false
cpa.predicate.abstraction.computation 	= BOOLEAN
cpa.callstack.skipRecursion 			= true
cpa.predicate.precision.sharing			= GLOBAL
cpa.predicate.refinement.performInitialStaticRefinement = false
cpa.predicate.refinement.restartAfterRefinements        = 1
cpa.predicate.blk.threshold = 1

cpa.cintp.useIncCIntp 					= true

slicing.extractor = ALL
slicing.type = STATIC

# cpa.predicate.encodeBitvectorAs 					= INTEGER
# cpa.predicate.encodeFloatAs 						= RATIONAL
# solver.solver 										= SMTINTERPOL
solver.solver 										= MATHSAT5
counterexample.export.allowImpreciseCounterexamples	= true


output.disable 					= false
cpa.arg.export					= true
cfa.export						= true
cfa.exportPerFunction			= false
cfa.callgraph.export			= false
report.export					= true
# assumptions.export				= false
counterexample.export.enabled	= true
statistics.export 				= true


# specification 	= ./specification/default.spc
# specification 	= ./specification/sv-comp-datarace.spc
limits.time.cpu	= 900s
