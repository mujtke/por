# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# -------------------------------------------------------------------------------------------
# This configuration file uses Predicate Analyis with Parallel Block-Abstraction Memoization.
# -------------------------------------------------------------------------------------------

#include includes/parallelBam.properties

# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

analysis.algorithm.CEGAR = true

cegar.refiner = cpa.predicate.BAMPredicateRefiner
CompositeCPA.cpas = cpa.location.LocationCPA, \
                    cpa.callstack.CallstackCPA, \
                    cpa.functionpointer.FunctionPointerCPA, \
                    cpa.predicate.BAMPredicateCPA

cpa.predicate.blk.alwaysAtFunctions = true
cpa.predicate.blk.alwaysAtLoops     = true


cpa.threading.useClonedFunctions 	= true
cpa.threading.allowMultipleLHS 		= true
# cpa.callstack.unsupportedFunctions			= pthread_key_create, pthread_getspecific, pthread_setspecific, strcpy
cfa.useCFACloningForMultiThreadedPrograms	= true
cpa.callstack.skipRecursion 				= true
cpa.predicate.precision.sharing				= GLOBAL
cpa.predicate.refinement.performInitialStaticRefinement = false
cpa.predicate.refinement.restartAfterRefinements        = 1


# the following options are required to avoid synchronization problems in internal components.
# The workload for BDDs is quite low, so sequentializing BDD operations is no problem.
# TODO: We might want to access the solver in parallel, as most of the work happens there.
bdd.synchronizeLibraryAccess=true
solver.synchronize=true


solver.solver = SMTINTERPOL
cpa.predicate.encodeBitvectorAs = INTEGER
cpa.predicate.encodeFloatAs = RATIONAL


specification = ./specification/sv-comp-errorlabel.spc
# specification = specification/default.spc


#include includes/resource-limits.properties


