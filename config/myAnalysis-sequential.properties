# #########################################################################
# My configuration for concurrent program verification.
# This configuration uses BDD-analysis | Pred-Abstraction.
# #########################################################################

#include includes/predicateAnalysis-PredAbsRefiner.properties

cpa					= cpa.arg.ARGCPA
ARGCPA.cpa			= cpa.composite.CompositeCPA
CompositeCPA.cpas	= cpa.predicate.PredicateCPA, cpa.location.LocationCPA, cpa.callstack.CallstackCPA, , cpa.pointer2.PointerCPA, cpa.functionpointer.FunctionPointerCPA


analysis.algorithm.CEGAR 				= true
analysis.traversal.order				= dfs
analysis.traversal.useReversePostorder	= false
analysis.traversal.useCallstack			= true
analysis.traversal.useNumberOfThreads	= true
analysis.checkCounterexamples			= false


cpa.callstack.unsupportedFunctions				= strcpy, platform_device_alloc, platform_device_add, misc_register
cpa.callstack.skipVoidRecursion					= true
cpa.composite.aggregateBasicBlocks				= false
cpa.predicate.abstraction.computation 	= BOOLEAN
cpa.callstack.skipRecursion 			= true
cpa.predicate.precision.sharing			= GLOBAL
cpa.locations.allowMultipleLHS 			= true
cpa.predicate.refinement.performInitialStaticRefinement = false
# cpa.predicate.refinement.restartAfterRefinements        = 1
cpa.predicate.blk.threshold = 1


solver.solver 										= MATHSAT5
counterexample.export.allowImpreciseCounterexamples	= true


cpa.arg.export					= true
cfa.export						= false
cfa.exportPerFunction			= false
cfa.callgraph.export			= false
report.export					= true
# assumptions.export				= false
counterexample.export.enabled	= false


cpa.arg.proofWitness			= proof.graphml
cpa.arg.proofWitness.dot		= proof.dot


limits.time.cpu		= 900s

specification = specification/default.spc

