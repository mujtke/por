# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et.al.).
# It is configured for the Single-Block Encoding (SBE) case.
# ----------------------------------------------------------------------



cegar.refiner = cpa.bdd.BddRefiner


# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa 				= cpa.arg.ARGCPA
ARGCPA.cpa 			= cpa.composite.CompositeCPA
CompositeCPA.cpas  	= cpa.threading.ThreadingCPA, cpa.bdd.BDDCPA, cpa.pointer2.PointerCPA


analysis.algorithm.CEGAR 				= true
analysis.traversal.order               	= dfs
analysis.traversal.useReversePostorder 	= false
analysis.traversal.useCallstack        	= true
analysis.traversal.useNumberOfThreads  	= true


# max number of threads that program can create.
cpa.threading.maxNumberOfThreads 			= 5
cpa.threading.useClonedFunctions 			= true
cpa.threading.useLocalAccessLocks 			= false
cpa.callstack.unsupportedFunctions			= {}
cfa.useCFACloningForMultiThreadedPrograms	= true
cpa.composite.aggregateBasicBlocks 			= false
# cpa.predicate.abstraction.computation 		= BOOLEAN
# cpa.predicate.blk.threshold 				= 1
cpa.callstack.skipRecursion 				= true
# cpa.predicate.precision.sharing				= LOCATION
# cpa.predicate.refinement.performInitialStaticRefinement = false
# cpa.predicate.refinement.restartAfterRefinements        = 1


# choose efficient solver to solve the satisfiable problem.
# enum: [MATHSAT5, SMTINTERPOL, Z3, PRINCESS]
solver.solver = MATHSAT5


# this automaton defines which locations are the error locations
specification = ./specification/sv-comp-reachability.spc
# specification = ./specification/sv-comp-errorlabel.spc
limits.time.cpu = 900s


