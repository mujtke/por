# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et.al.).
# It is configured for the Single-Block Encoding (SBE) case.
# ----------------------------------------------------------------------



#include includes/predicateAnalysis-PredAbsRefiner.properties



# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa 				= cpa.arg.ARGCPA
ARGCPA.cpa 			= cpa.composite.CompositeCPA
CompositeCPA.cpas  	= cpa.threading.ThreadingCPA, cpa.cintp.CIntpCPA, cpa.predicate.PredicateCPA, cpa.locationss.LocationsCPA, cpa.pointer2.PointerCPA


analysis.algorithm.CEGAR 				= true
analysis.traversal.order               	= dfs
analysis.traversal.useReversePostorder 	= false
analysis.traversal.useCallstack        	= true
analysis.traversal.useNumberOfThreads  	= true


cpa.threading.maxNumberOfThreads 			= 5
cpa.threading.useClonedFunctions 			= true
cpa.threading.useLocalAccessLocks 			= true
cpa.callstack.unsupportedFunctions			= pthread_key_create, pthread_getspecific, pthread_setspecific, strcpy, platform_device_alloc, platform_device_add, misc_register, my_callback
cfa.useCFACloningForMultiThreadedPrograms	= true
cpa.composite.aggregateBasicBlocks 			= false
cpa.callstack.skipRecursion 				= true
cpa.locations.allowMultipleLHS 				= true
cpa.locations.useClonedFunctions			= true
cpa.predicate.abstraction.computation 		= CARTESIAN
cpa.predicate.blk.threshold 				= 1
cpa.predicate.precision.sharing                         = GLOBAL
cpa.predicate.refinement.performInitialStaticRefinement = false
cpa.predicate.refinement.restartAfterRefinements        = 1
cpa.cintp.useIncCIntp 						= true



cpa.predicate.encodeBitvectorAs 					= INTEGER
cpa.predicate.encodeFloatAs 						= RATIONAL
solver.solver 										= SMTINTERPOL


output.disable 					= false
cpa.arg.export					= false
cpa.arg.proofWitness			= proof.graphml
cpa.arg.proofWitness.dot		= proof.dot
cpa.predicate.predmap.export	= false
cpa.predicate.invariants.export = false
cfa.export						= false
cfa.exportPerFunction			= false
cfa.callgraph.export			= false
report.export					= false
# assumptions.export				= false
counterexample.export.enabled	= false
statistics.export 				= true


specification 	= ./specification/sv-comp-reachability.spc
limits.time.cpu = 900s



