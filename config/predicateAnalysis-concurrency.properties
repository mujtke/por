# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

// ----------------------------------------------------------------------
// This configuration file applies predicate analysis with ABE for verifying multi-threaded programs.
// ----------------------------------------------------------------------

#include includes/predicateAnalysis-ABEl.properties

#include includes/predicateAnalysis-PredAbsRefiner.properties

#include includes/resource-limits.properties
specification = specification/default.spc

cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.threading.ThreadingCPA, cpa.predicate.PredicateCPA

analysis.traversal.useReversePostorder = false
analysis.traversal.useCallstack        = false
analysis.traversal.useNumberOfThreads  = true

cpa.callstack.unsupportedFunctions={}
cfa.useCFACloningForMultiThreadedPrograms=true

# instead of precise conditional branching points, we have thread interleavings.
counterexample.export.allowImpreciseCounterexamples = true

# we require all thread interleavings, lets disable block summaries.
cpa.composite.aggregateBasicBlocks = false
